
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <29 30>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp TAB>;
        };
        combo_delete {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp DELETE>;
        };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <41 42>;
            bindings = <&kp BSPC>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <43 44>;
            bindings = <&kp RET>;
        };
        combo_scln {
            timeout-ms = <50>;
            key-positions = <42 43>;
            bindings = <&kp SCLN>;
        };
    };
};

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4      &kp N5       &tog 4                                                                                                              &mo 3     &kp N6     &kp N7     &kp N8     &kp N9     &kp N0  &kp MINUS
   &kp ESC      &kp Q     &kp W     &kp E      &kp R       &kp T       &none                                                                                                               &none     &kp Y      &kp U      &kp I      &kp O      &kp P   &kp BSLH
   &kp TAB      &hm LGUI A  &hm LALT S &hm LCTRL D  &hm LSHFT F &kp G  &none                &kp LCTRL   &kp LALT                             &kp LGUI  &kp RCTRL                           &none     &kp H      &hm LSHFT J &hm LCTRL K &hm LALT L &hm LGUI SQT  &kp RET
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V       &kp B                 &none      &none       &kp HOME &none                &none  &kp PG_UP &none                               &none     &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
   &none  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                             &lt 2 BSPC   &kp DELETE   &kp END                             &kp PG_DN &kp ENTER &lt 1 SPACE                           &kp UP   &kp DOWN   &kp LBKT  &kp RBKT   &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2             &kp N3             &kp N4    &kp N5         &trans                                                                                                              &mo 3     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
   &kp TAB     &kp LPAR  &kp NUM_7          &kp NUM_8          &kp NUM_9    &kp RPAR  &none                                                                                                                 &none     &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
   &kp ESC     &kp SEMI &kp NUM_4          &kp NUM_5          &kp NUM_6    &kp EQL  &none                &kp LCTRL   &kp LALT                             &kp LGUI  &kp RCTRL                              &none     &kp H   &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT     &kp GRAVE &kp NUM_1          &kp NUM_2          &kp NUM_3    &kp MINUS          &none      &none       &kp HOME  &none                &none &kp PG_UP &none                                  &none     &kp N   &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
    &none     &kp GRAVE  &kp CAPS          &kp LEFT  &kp RIGHT                                &kp NUM_0  &kp DOT     &kp END                              &kp PG_DN &kp ENTER &kp KP_N0                                                       &kp UP  &kp DOWN  &kp KP_DOT  &kp RBKT      &mo 2
            >;
        };


        layer_nav {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6 &tog 1                                                                                               &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &kp ESC &kp TAB &kp HOME &kp END  &kp INS &none                                                                                                &none  &kp PG_DN   &kp PG_UP   &kp UP  &kp DEL  &kp BSPC  &trans
 &trans  &trans  &trans  &trans  &trans  &trans &none                           &trans  &trans                      &trans   &trans                     &none  &kp PG_UP   &kp LEFT &kp DOWN &kp RIGHT   &kp ENTER  &trans
 &trans &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)  &trans                         &none   &none  &trans   &none       &none   &trans   &none                   &none  &kp PG_DN   &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                                 &trans  &trans  &trans                      &trans   &trans  &trans                         &trans  &trans  &trans  &trans  &trans
            >;
        };
        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

layer_game {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &tog 4                                                                       &mo 3 &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp ESC   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                                        &none &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &kp TAB   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT             &kp LGUI  &kp RCTRL           &none &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B         &none    &none     &kp HOME &none &none &kp PG_UP &none     &none           &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &none     &kp LEFT  &kp DOWN &kp UP &kp RIGHT                &kp SPACE &kp BSPC   &kp END              &kp PG_DN &kp ENTER &kp SPACE              &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo 2
      >;



    };
};
